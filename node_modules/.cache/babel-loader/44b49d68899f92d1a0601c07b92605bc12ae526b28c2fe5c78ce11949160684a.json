{"ast":null,"code":"var _jsxFileName = \"/Users/bao_vu/AWS-Coding-Club-Website/src/components/pages/SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../../App.css\";\nimport Footer from \"../Footer\"; // Ensure Footer is correctly imported\n\n// SignUpForm definition (previously EmailForm)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SignUpForm() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Call a function to validate email\n    if (!validateEmail(email)) {\n      setMessage('Invalid email format');\n      return;\n    }\n\n    // Send the email to the backend for further processing\n    const response = await fetch('/submit-email', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      setMessage('Form submitted successfully!');\n    } else {\n      setMessage(data.message); // Could be \"Email already exists\" or other error\n    }\n  };\n  const validateEmail = email => {\n    const re = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    return re.test(String(email).toLowerCase());\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(SignUpForm, \"mxdRTHxkiTeLOv2akPbesFCh75U=\");\n_c = SignUpForm;\nexport default function SignUp() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SignUpForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), \"      \"]\n  }, void 0, true);\n}\n_c2 = SignUp;\nvar _c, _c2;\n$RefreshReg$(_c, \"SignUpForm\");\n$RefreshReg$(_c2, \"SignUp\");","map":{"version":3,"names":["React","useState","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUpForm","_s","email","setEmail","message","setMessage","handleSubmit","e","preventDefault","validateEmail","response","fetch","method","headers","body","JSON","stringify","data","json","success","re","test","String","toLowerCase","onSubmit","children","type","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","SignUp","_c2","$RefreshReg$"],"sources":["/Users/bao_vu/AWS-Coding-Club-Website/src/components/pages/SignUp.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../../App.css\";\nimport Footer from \"../Footer\";  // Ensure Footer is correctly imported\n\n// SignUpForm definition (previously EmailForm)\nfunction SignUpForm() {\n    const [email, setEmail] = useState('');\n    const [message, setMessage] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // Call a function to validate email\n        if (!validateEmail(email)) {\n            setMessage('Invalid email format');\n            return;\n        }\n\n        // Send the email to the backend for further processing\n        const response = await fetch('/submit-email', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ email }),\n        });\n\n        const data = await response.json();\n\n        if (data.success) {\n            setMessage('Form submitted successfully!');\n        } else {\n            setMessage(data.message); // Could be \"Email already exists\" or other error\n        }\n    };\n\n    const validateEmail = (email) => {\n        const re = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n        return re.test(String(email).toLowerCase());\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label>\n                Email:\n                <input\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                />\n            </label>\n            <button type=\"submit\">Submit</button>\n            <p>{message}</p>\n        </form>\n    );\n}\n\nexport default function SignUp() {\n    return (\n        <>\n            <SignUpForm /> {/* This renders the form */}\n            <Footer />      {/* This renders the footer */}\n        </>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}