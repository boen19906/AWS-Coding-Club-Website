{"ast":null,"code":"var _jsxFileName = \"/Users/bao_vu/AWS-Coding-Club-Website/src/components/pages/SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../../App.css\";\nimport Footer from \"../Footer\"; // Ensure Footer is correctly imported\nimport SignUpForm from \"../Form\"; // If this is referring to a separate form component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SignUpForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n// Move EmailForm outside of the SignUp component\n_c = SignUp;\nfunction EmailForm() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Call a function to validate email\n    if (!validateEmail(email)) {\n      setMessage('Invalid email format');\n      return;\n    }\n\n    // Send the email to the backend for further processing\n    const response = await fetch('/submit-email', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      setMessage('Form submitted successfully!');\n    } else {\n      setMessage(data.message); // Could be \"Email already exists\" or other error\n    }\n  };\n  const validateEmail = email => {\n    const re = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    return re.test(String(email).toLowerCase());\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(EmailForm, \"mxdRTHxkiTeLOv2akPbesFCh75U=\");\n_c2 = EmailForm;\nexport { EmailForm }; // Use named export if you need to use it elsewhere\nvar _c, _c2;\n$RefreshReg$(_c, \"SignUp\");\n$RefreshReg$(_c2, \"EmailForm\");","map":{"version":3,"names":["React","useState","Footer","SignUpForm","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUp","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","EmailForm","_s","email","setEmail","message","setMessage","handleSubmit","e","preventDefault","validateEmail","response","fetch","method","headers","body","JSON","stringify","data","json","success","re","test","String","toLowerCase","onSubmit","type","value","onChange","target","required","_c2","$RefreshReg$"],"sources":["/Users/bao_vu/AWS-Coding-Club-Website/src/components/pages/SignUp.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../../App.css\";\nimport Footer from \"../Footer\";  // Ensure Footer is correctly imported\nimport SignUpForm from \"../Form\"; // If this is referring to a separate form component\n\nexport default function SignUp() {\n    return (\n        <>\n            <SignUpForm />\n            <Footer />\n        </>\n    );\n}\n\n// Move EmailForm outside of the SignUp component\nfunction EmailForm() {\n    const [email, setEmail] = useState('');\n    const [message, setMessage] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // Call a function to validate email\n        if (!validateEmail(email)) {\n            setMessage('Invalid email format');\n            return;\n        }\n\n        // Send the email to the backend for further processing\n        const response = await fetch('/submit-email', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ email }),\n        });\n\n        const data = await response.json();\n\n        if (data.success) {\n            setMessage('Form submitted successfully!');\n        } else {\n            setMessage(data.message); // Could be \"Email already exists\" or other error\n        }\n    };\n\n    const validateEmail = (email) => {\n        const re = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n        return re.test(String(email).toLowerCase());\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label>\n                Email:\n                <input\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                />\n            </label>\n            <button type=\"submit\">Submit</button>\n            <p>{message}</p>\n        </form>\n    );\n}\n\nexport { EmailForm }; // Use named export if you need to use it elsewhere\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}